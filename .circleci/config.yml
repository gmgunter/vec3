version: 2.1

commands:
  install-miniconda:
    description: Install & initialize Miniconda3 on the executor
    parameters:
      prefix:
        description: Miniconda3 installation root path
        type: string
        default: $HOME/miniconda3
    steps:
      - run:
          name: Fetch & run Miniconda3 installer
          command: |
            curl -sSL https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -o miniconda.sh
            sh miniconda.sh -b -p <<parameters.prefix>>
            rm miniconda.sh
      - run:
          name: Initialize conda
          command: |
            echo "export PATH=<<parameters.prefix>>/bin:$PATH" >> $BASH_ENV

jobs:
  pre-commit-checks:
    docker:
      - image: cimg/base:stable
    steps:
      - install-miniconda
      - checkout
      - run:
          name: Install pre-commit
          command: |
            conda install --channel conda-forge pre-commit
      - run:
          name: Run pre-commit checks
          command: |
            pre-commit run --all-files

  build-and-test:
    parameters:
      cmake-preset:
        description: CMake configuration preset name
        type: string
    docker:
      - image: cimg/base:stable
    steps:
      - install-miniconda
      - checkout
      - run:
          name: Install dependencies
          command: |
            conda env update --name base --file environment.yml
      - run:
          name: Configure
          working_directory: libvec3
          command: |
            cmake --preset=<<parameters.cmake-preset>>
      - run:
          name: Build
          working_directory: libvec3
          command: |
            cmake --build --preset=<<parameters.cmake-preset>>
      - run:
          name: Run unit tests
          working_directory: libvec3
          command: |
            ctest --preset=<<parameters.cmake-preset>> --output-junit test.xml
      - store_test_results:
          path: libvec3/build/<<parameters.cmake-preset>>/test.xml

workflows:
  pr-pipeline:
    jobs:
      - pre-commit-checks
      - build-and-test:
          cmake-preset: ninja-release

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - build-and-test:
          cmake-preset: ninja-release
